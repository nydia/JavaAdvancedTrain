# 集群需要变更的配置
# broker.id分别为1，2，3
# log.dirs分别为C:/tmp/kafka-logs1， log.dirs=C:/tmp/kafka-logs2， log.dirs=C:/tmp/kafka-logs3
# listeners=PLAINTEXT://:9003 分别为 listeners=PLAINTEXT://:9001， listeners=PLAINTEXT://:9002， listeners=PLAINTEXT://:9003
# 用于服务的broker id。如果没设置，将生存一个唯一broker id
broker.id=1
# 服务器用于从接收网络请求并发送网络响应的线程数
num.network.threads=3
#  服务器用于处理请求的线程数，可能包括磁盘I/O
num.io.threads=8
# 服务端用来处理socket连接的SO_SNDBUF缓冲大小。如果值为-1，则使用系统默认值。
socket.send.buffer.bytes=102400
# 服务端用来处理socket连接的SO_RCVBUFF缓冲大小。如果值为-1，则使用系统默认值。
socket.receive.buffer.bytes=102400
# ocket请求的最大大小，这是为了防止server跑光内存，不能大于Java堆的大小
socket.request.max.bytes=104857600
# 保存日志数据的目录，如果未设置将使用log.dir的配置
log.dirs=C:/tmp/kafka-logs1
# 每个topic的默认日志分区数
num.partitions=1
# 每个数据目录，用于启动时日志恢复和关闭时刷新的线程数
num.recovery.threads.per.data.dir=1
# offset topic的副本数
offsets.topic.replication.factor=1
# 事务topic的副本数
transaction.state.log.replication.factor=1
# 覆盖事务topic的min.insync.replicas配置
transaction.state.log.min.isr=1
# 日志删除的时间阈值
log.retention.hours=168
# 单个日志段文件最大大小
log.segment.bytes=1073741824
# 日志清理器检查是否有日志符合删除的频率（以毫秒为单位）
log.retention.check.interval.ms=300000
# 与ZK server建立连接的超时时间,没有配置就使用zookeeper.session.timeout.ms	
zookeeper.connection.timeout.ms=18000
# 是否允许删除topic。如果关闭此配置，通过管理工具删除topic将不再生效
delete.topic.enable=true
# 在执行第一次重新平衡之前，group协调器将等待更多consumer加入group的时间
group.initial.rebalance.delay.ms=0
# kafka允许的最大的一个批次的消息大小
message.max.bytes=5000000
# 尝试提取每个分区的消息的字节数
replica.fetch.max.bytes=5000000
# 监听器列表 - 使用逗号分隔URI列表和监听器名称
listeners=PLAINTEXT://:9001
# 
broker.list=localhost:9001,localhost:9002,localhost:9003
# Zookeeper主机地址
zookeeper.connect=localhost:2181